<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="utf-8">
        <title>D3 Test</title>
        <script type="text/javascript" src="D3/d3.js"></script>
        <style type="text/css">
             body {
                font: 10px sans-serif;
                }
     
             .arc path {
                 stroke: #fff;
                }

             #curve-text {
                font: 12px sans-serif;
                }

             #curve-line {
                stroke: #999;
                fill: none;
                }

        </style>
    </head>
    <body>
        <script type="text/javascript" src="js/script.js"></script>
        <script type="text/javascript">
            // d3.select("body").append("p").text("New paragraph!");

            //  var data = [{
            //     "age": "<5",
            //     "population": 2704659
            // }, {
            //     "age": "5-13",
            //     "population": 4499890
            // }, {
            //     "age": "14-17",
            //     "population": 2159981
            // }, {
            //     "age": "18-24",
            //     "population": 3853788
            // }, {
            //     "age": "25-44",
            //     "population": 14106543
            // }, {
            //     "age": "45-64",
            //     "population": 8819342
            // }, {
            //     "age": "â‰¥65",
            //     "population": 612463
            // }];

            // var width = 500,
            //     height = 500,
            //     radius = Math.min(width, height) / 2;
            // curAngle = 0;

            // var color = d3.scaleOrdinal()
            //     .range(["#98abc5", "#8a89a6", "#7b6888", "#6b486b", "#a05d56", "#d0743c", "#ff8c00"]);

            // var arc = d3.arc()
            //     .outerRadius(radius - 10)
            //     .innerRadius(0);

            // var pie = d3.pie()
            //     .sort(null)
            //     .value(function(d) {
            //         return d.population;
            //     });

            // var svg = d3.select("body").append("svg")
            //     .attr("width", width)
            //     .attr("height", height)
            //     .append("g")
            //     .attr("transform", "translate(" + width / 2 + "," + height / 2 + ")");

            // data.forEach(function(d) {
            //     d.population = +d.population;
            // });

            // var g = svg.selectAll(".arc")
            //     .data(pie(data))
            //     .enter().append("g")
            //     .attr("class", "arc");

            // g.append("path")
            //     .attr("d", arc)
            //     .style("fill", function(d) {
            //         return color(d.data.age);
            //     });

            // g.append("text")
            //     .attr("transform", function(d) {
            //         return "translate(" + arc.centroid(d) + ")";
            //     })
            //     .attr("dy", ".35em")
            //     .style("text-anchor", "middle")
            //     .text(function(d) {
            //         return d.data.age;
            //     });

            // var interval = null;
            //  var isDown = false;
            //  var lastX = width / 2;
            //  var lastY = height / 2;
            //  var curAngle = 0;
            //  var finishAngle = 0;
            //  var angleDeg = 0;
            //  var testbool = true;
            //  svg.on("mousedown", function(d) {
            //    isDown = true;
            //    var thisX = d3.event.x - lastX,
            //      thisY = d3.event.y - lastY;
            //    curAngle = Math.atan2(lastY - d3.event.y, lastX - d3.event.x) // * 180 / Math.PI) ;
            //    if (curAngle < 0) curAngle += 2 * Math.PI;
            //    curAngle = curAngle * 180 / Math.PI;
            //  });
            //  svg.on("mousemove", function(d) {
            //    if (isDown) {
            //      //svg.attr("transform", "translate(" + width / 2 + "," + height / 2 + ") rotate(" + (-curAngle) + "," + 0 + "," + 0 + ")");
            //      var thisX = d3.event.x - lastX,
            //        thisY = d3.event.y - lastY;
            //      angleDeg = Math.atan2(lastY - d3.event.y, lastX - d3.event.x) // * 180 / Math.PI) - curAngle
            //      if (angleDeg < 0) angleDeg += 2 * Math.PI;
            //      angleDeg = angleDeg * 180 / Math.PI;
            //      angleDeg = angleDeg - curAngle + finishAngle;
            //      if (angleDeg < 0) angleDeg += 360; 
            //      svg.attr("transform", "translate(" + width / 2 + "," + height / 2 + ") rotate(" + angleDeg + "," + 0 + "," + 0 + ")");

            //    }
            //  });
            //  svg.on("mouseup", function(d) {
            //    finishAngle = angleDeg;
            //    console.log('curAngleend', curAngle)
            //    isDown = false;
            //  });

        </script>
    </body>
</html>  